syntax = "proto3";
package tendermint.p2p;

option go_package = "github.com/tendermint/tendermint/proto/tendermint/p2p";

import "gogoproto/gogo.proto";
import "tendermint/blocksync/types.proto";
import "tendermint/consensus/types.proto";
import "tendermint/statesync/types.proto";
import "tendermint/types/evidence.proto";
import "tendermint/mempool/types.proto";
import "tendermint/p2p/pex.proto";
import "google/protobuf/timestamp.proto";

message ProtocolVersion {
  uint64 p2p   = 1 [(gogoproto.customname) = "P2P"];
  uint64 block = 2;
  uint64 app   = 3;
}

message NodeInfo {
  ProtocolVersion protocol_version = 1 [(gogoproto.nullable) = false];
  string          node_id          = 2 [(gogoproto.customname) = "NodeID"];
  string          listen_addr      = 3;
  string          network          = 4;
  string          version          = 5;
  bytes           channels         = 6;
  string          moniker          = 7;
  NodeInfoOther   other            = 8 [(gogoproto.nullable) = false];
  bytes           pro_tx_hash      = 9;
}

message NodeInfoOther {
  string tx_index    = 1;
  string rpc_address = 2 [(gogoproto.customname) = "RPCAddress"];
}

message PeerInfo {
  string                    id             = 1 [(gogoproto.customname) = "ID"];
  repeated PeerAddressInfo  address_info   = 2;
  google.protobuf.Timestamp last_connected = 3 [(gogoproto.stdtime) = true];
  bool                      inactive       = 4;
  bytes                     pro_tx_hash    = 5;
}

message PeerAddressInfo {
  string                    address           = 1;
  google.protobuf.Timestamp last_dial_success = 2 [(gogoproto.stdtime) = true];
  google.protobuf.Timestamp last_dial_failure = 3 [(gogoproto.stdtime) = true];
  uint32                    dial_failures     = 4;
}

message Echo {
  string Value = 1;
}

message Envelope {
  map<string, string> attributes = 1;

  oneof sum {
    tendermint.blocksync.Message blocksync_message = 2;
    tendermint.consensus.Message consensus_message = 3;
    tendermint.statesync.Message statesync_message = 4;
    tendermint.p2p.PexMessage    pex_message       = 5;
    tendermint.types.Evidence    evidence          = 6;
    tendermint.mempool.Txs       mempool_txs       = 7;
    Echo                         echo              = 8;
  }
}
