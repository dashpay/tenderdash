syntax = "proto3";
package tendermint.types;

option go_package = "github.com/tendermint/tendermint/proto/tendermint/types";

import "gogoproto/gogo.proto";
import "tendermint/types/types.proto";
import "tendermint/version/types.proto";
import "google/protobuf/timestamp.proto";

// Header defines the structure of a Tendermint block header.
message Header {
    // basic block info
    tendermint.version.Consensus version                  = 1 [(gogoproto.nullable) = false];
    string                       chain_id                 = 2 [(gogoproto.customname) = "ChainID"];
    int64                        height                   = 3;
    uint32                       core_chain_locked_height = 100;
    google.protobuf.Timestamp    time                     = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  
    // prev block info
    tendermint.types.BlockID last_block_id = 5 [(gogoproto.nullable) = false];
  
    // hashes of block data
    bytes last_commit_hash = 6;  // commit from validators from the last block
    bytes data_hash        = 7;  // transactions
  
    // hashes from the app output from the prev block
    bytes validators_hash      = 8;   // validators for the current block
    bytes next_validators_hash = 9;   // validators for the next block
    bytes consensus_hash       = 10;  // consensus params for current block
    bytes app_hash             = 11;  // state after txs from the previous block
    bytes last_results_hash    = 12;  // root hash of all results from the txs from the previous block
  
    // consensus info
    bytes evidence_hash        = 13;   // evidence included in the block
    bytes proposer_pro_tx_hash = 101;  // original proposer of the block
  
    uint64 proposed_app_version = 102; // proposer's latest available app protocol version
  }
  

message SignedHeader {
    tendermint.types.Header header = 1;
    Commit commit = 2;
  }
  