---
name: Docker
# Build & Push rebuilds the Tenderdash docker image every time a release is published
# and pushes the image to https://hub.docker.com/r/dashpay/tenderdash/tags
on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: 'Docker tag'
        required: true
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set suffix to Docker tags
        uses: actions/github-script@v6
        id: suffix
        if: ${{ github.event.release != null }}
        with:
          result-encoding: string
          script: "return (context.payload.release.tag_name.includes('-dev') ? '-dev' : '');"

      - name: Set Docker tags and labels
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: dashpay/tenderdash
          tags: |
            type=semver,pattern={{version}},value=${{ github.event.inputs.tag }}
            type=ref,event=branch
            type=ref,event=pr
            type=match,pattern=v(\d+),group=1
            type=match,pattern=v(\d+.\d+),group=1
            type=match,pattern=v(\d+.\d+.\d+),group=1
            type=match,pattern=v(.*),group=1,suffix=,enable=${{ contains(github.event.release.tag_name, '-dev') }}
          flavor: |
            latest=${{ github.event.release != null && !contains(github.event.release.tag_name, '-dev') }}
            suffix=${{ steps.suffix.outputs.result }}

      - name: Publish to Docker Hub
        uses: docker/build-push-action@v3.1.0
        with:
          context: .
          file: ./DOCKER/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Show Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
