---
name: e2e
# Runs the CI end-to-end test network on all pushes to master or release
# branches and every pull request, but only if any Go files have been changed.
on:
  workflow_dispatch: # allow running workflow manually
  pull_request:
    paths:
      - "**Dockerfile"
      - "**.go"
  push:
    branches:
      - master
      - v[0-9]+.[0-9]+-dev

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        testnet: ["dashcore", "rotate"]
    timeout-minutes: 30
    env:
      FULLNODE_PUBKEY_KEEP: false
      CGO_LDFLAGS: "-L/usr/local/lib -ldashbls -lrelic_s -lmimalloc-secure -lgmp"
      CGO_CXXFLAGS: "-I/usr/local/include"
    steps:
      - uses: actions/setup-go@v5.0.0
        with:
          go-version: "1.22"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.1.0

      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum

      - uses: ./.github/actions/bls
        name: Install BLS library
        if: "github.event_name != 'pull_request' || env.GIT_DIFF != ''"

      - name: Build runner and tests
        working-directory: test/e2e
        # Run two make jobs in parallel, since we can't run steps in parallel.
        run: make -j2 runner tests
        if: "github.event_name != 'pull_request' || env.GIT_DIFF != ''"

      - name: Build E2E Docker image
        uses: docker/build-push-action@v5.2.0
        with:
          context: .
          file: test/e2e/docker/Dockerfile
          push: false
          load: true
          tags: tenderdash/e2e-node
          cache-from: type=gha
          cache-to: type=gha,mode=max
        if: "github.event_name != 'pull_request' || env.GIT_DIFF != ''"

      - name: Run CI ${{ matrix.testnet }} testnet
        working-directory: test/e2e
        run: ./build/runner -f networks/${{ matrix.testnet }}.toml
        if: "github.event_name != 'pull_request' || env.GIT_DIFF != ''"

      - name: Emit ${{ matrix.testnet }} logs on failure
        working-directory: test/e2e
        run: ./build/runner -f networks/${{ matrix.testnet }}.toml logs > ${{ matrix.testnet }}.log
        if: ${{ failure() }}

      - name: Upload ${{ matrix.testnet }} logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.testnet }}.log
          path: test/e2e/${{ matrix.testnet }}.log
          retention-days: 7
        if: ${{ failure() }}

      - name: Cleanup ${{ matrix.testnet }} configuration
        working-directory: test/e2e
        run: ./build/runner -f networks/${{ matrix.testnet }}.toml cleanup
        if: "github.event_name != 'pull_request' || env.GIT_DIFF != ''"
