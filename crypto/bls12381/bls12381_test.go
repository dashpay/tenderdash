// nolint:lll
package bls12381

import (
	"encoding/base64"
	"encoding/hex"
	"fmt"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"github.com/dashpay/tenderdash/crypto"
	tmbytes "github.com/dashpay/tenderdash/libs/bytes"
)

func TestSignAndValidateBLS12381(t *testing.T) {
	privKey := GenPrivKey()
	pubKey := privKey.PubKey()

	msg := crypto.CRandBytes(128)
	sig, err := privKey.SignDigest(msg)
	require.Nil(t, err)

	// Test the signature
	assert.True(t, pubKey.VerifySignatureDigest(msg, sig))
}

func TestBLSAddress(t *testing.T) {
	testCases := []struct {
		skB64   string
		pkB64   string
		addrHex string
	}{
		{
			skB64:   "N3CR8OcoRjvC2n1UbFO59rgd9KHMGrW/KcWQi3FRoy0=",
			pkB64:   "hiQykLvL/ZrnW97OeYGWU1AgjrXpmwTVzSTpVa2pYfjAoWLe50C+e9xsPAYTui6x",
			addrHex: "BB8F983D64252213936C9E962FDB066B3266C335",
		},
	}
	for i, tc := range testCases {
		t.Run(fmt.Sprintf("test-case #%d", i+1), func(t *testing.T) {
			skBytes, err := base64.StdEncoding.DecodeString(tc.skB64)
			assert.NoError(t, err)
			pkBytes, err := base64.StdEncoding.DecodeString(tc.pkB64)
			assert.NoError(t, err)
			addrBytes, err := hex.DecodeString(tc.addrHex)
			assert.NoError(t, err)
			privKey := PrivKey(skBytes)
			pubKey := privKey.PubKey()
			assert.EqualValues(t, pkBytes, pubKey)
			assert.EqualValues(t, addrBytes, pubKey.Address())
		})
	}
}

func TestRecoverThresholdPublicKeyFromPublicKeys(t *testing.T) {
	testCases := []struct {
		n           int
		proTxHashes []string
		skShares    []string
		pkShares    []string
		pkThreshold string
	}{
		{
			n: 4,
			proTxHashes: []string{
				"FDC09407DA9473CDC5E5AFCBB55712C95765343B2AF900B28BE4004E69CEDBB3",
				"02AE8AAAF330949260BA537B05E408CEFA162FFA7CBB04C6C95BE2F922650A9D",
				"036BCAEE159C09B75FD6404FAD6E76620AF595EF74734572E9D3DB4C226466FD",
				"04FFEFD49498E2FC51A6FEB7FC695ED614EEA24B1C42F62AECDCA36B0FDCC026",
			},
			skShares: []string{
				"DLP5PN4lEKu834h1kgTBM1XjHbtCaXtfmqBud4GQooU=",
				"DQcsSHfg84QWW4GtBXccQYoYJpM9XqP429JfbcF59jU=",
				"P9gpDi8wNYaoweMOBLKAjwiFQ9H3jB6TCr1yFmg5Mms=",
				"ZVae2U68c511BpfXWNTD+7KJkdrzYFUDslwtpZ1qKLM=",
			},
			pkShares: []string{
				"ql8sHSxaXsWu5Zt+0HULXCFEfzG/sStFuYa2NWykFzeE6IVG4kyUt+uO66JNHUkQ",
				"hn14ZB7dB/xAf45abtVjQDsch8ogt42LAHj+8v5/r6MWTdseESPCnAhT+huBAQ7i",
				"hVxdmB/tL//Xp3aNCQdqkc84W0/RmoAeONTQd2eUYhgGFe1ymX85XTTS8E7UrY4Y",
				"tGc2Wt/Q2P9SB5F4+TedXuu68ixcuphB372iyoST5QGFUpBBfYlz6/CzxiesaOWI",
			},
			pkThreshold: "hiQykLvL/ZrnW97OeYGWU1AgjrXpmwTVzSTpVa2pYfjAoWLe50C+e9xsPAYTui6x",
		},
		{
			n: 5,
			proTxHashes: []string{
				"FDC09407DA9473CDC5E5AFCBB55712C95765343B2AF900B28BE4004E69CEDBB3",
				"02AE8AAAF330949260BA537B05E408CEFA162FFA7CBB04C6C95BE2F922650A9D",
				"036BCAEE159C09B75FD6404FAD6E76620AF595EF74734572E9D3DB4C226466FD",
				"04FFEFD49498E2FC51A6FEB7FC695ED614EEA24B1C42F62AECDCA36B0FDCC026",
				"0552e56ba3564c124ac8a6a0fa481219d100478566e81c7943507296b14484ae",
			},
			skShares: []string{
				"DJTpih/vVzZSIT/Ngft7nGvh0alSnYre1+Ce+cZNHYw=",
				"Tjxoqn0lDq0uJycQUYo5+r/vki3pZdrnDIB9mp4ze+0=",
				"TMa3NqL7I3hGdHNOTIYhaMjNn2esSWtMLe5RcvVkyTs=",
				"K4KJIfWp2h+mtBEJ2ePKX2DXeSe8GARIdtwOlg4MhQg=",
				"WxmUgwOtDVfrdzLNRKNWovmwTzTbBI1qbMbPnCwf5VI=",
			},
			pkShares: []string{
				"r/w8vr15blUV17GPU4ss5CaMkjwyvy0cMqhTWDdSahOhVuU8LFYXB0SnlI1fX25L",
				"tLpx1kFIAVEkSWAhhqI+pOEvtL4u/KYEqDJDOO0bzunlF6kyy3hZ8I6bAzqN6dOZ",
				"mIPmlDjKop9VGZl2o36ryBOxJbsWwfczsv5JVu34tijDp9YkZh1Sdsy3pS8NTpo5",
				"gM0fFG0Pi/ri9u9uJ33f/ie67RbYli2r5zyJMlz4DPvr892udooIVxbLpEcQzyPv",
				"i9KQRLVpp9u6wrI4rEXlzTwByh86QNhm5rBz4oWmxen0CPIxoZa+JjIkWYB5ut41",
			},
			pkThreshold: "hiQykLvL/ZrnW97OeYGWU1AgjrXpmwTVzSTpVa2pYfjAoWLe50C+e9xsPAYTui6x",
		},
		{
			n: 3,
			proTxHashes: []string{
				"0740ce79c4e016fe5bc9b5438d1cab95bb3222352322cfb5fcd8048b9c6568cb",
				"007456fb4969a55aef48c6638ccb423dbd4dc5a871f373607f1f34d148dee0b0",
				"f726a232e89395adf70cce664326eb9e7bfcc1de77e0e7ea3b65e6765cdd685c",
			},
			skShares: []string{
				"NknYpxw6Dt8L6C1nvxXg5g83L0ekkXtp9KOAc3+cHgg=",
				"Z0w2fiDwBlx5AVYopUT1stQIulyhpoCOwAS3SbBX/w0=",
				"GyxTLuQZijZVQOJ+IAOr9fohPBtIGmW+jEcxLY3UVoo=",
			},
			pkShares: []string{
				"pUkeF0hf5IBVvVfg5cOCG9jNPQAx8GXWFflZKrSeIaypdhOEn6rbHkcahHCyybTe",
				"rJi5LeaMUbdWDec2z9zQWN/dDvg9NeWmFGREs1W+DEYWeruPISR7nO2BKhpwXyl3",
				"j4udh9zVOyKmNAWmdM2nD6ARTLRV8qd+EhPBFDM/o3Z6vnNsigA4AbAeCKdJh8on",
			},
			pkThreshold: "hiQykLvL/ZrnW97OeYGWU1AgjrXpmwTVzSTpVa2pYfjAoWLe50C+e9xsPAYTui6x",
		},
	}
	for i, tc := range testCases {
		t.Run(fmt.Sprintf("test-case #%d", i), func(t *testing.T) {
			proTxHashes := make([][]byte, tc.n)
			for i, s := range tc.proTxHashes {
				data, err := hex.DecodeString(s)
				require.NoError(t, err)
				proTxHashes[i] = tmbytes.Reverse(data)
			}
			privateKeys := make([]crypto.PrivKey, tc.n)
			for i, s := range tc.skShares {
				skBytes, err := base64.StdEncoding.DecodeString(s)
				require.NoError(t, err)
				privateKeys[i] = PrivKey(skBytes)
			}
			publicKeys := make([]crypto.PubKey, tc.n)
			for i, s := range tc.pkShares {
				pkBytes, err := base64.StdEncoding.DecodeString(s)
				require.NoError(t, err)
				pk := PubKey(pkBytes)
				publicKeys[i] = pk
				sk := privateKeys[i]
				require.Equal(t, sk.PubKey().Bytes(), pk.Bytes())
			}
			thresholdPublicKey, err := RecoverThresholdPublicKeyFromPublicKeys(publicKeys, proTxHashes)
			require.NoError(t, err)
			encodedThresholdPublicKey := base64.StdEncoding.EncodeToString(thresholdPublicKey.Bytes())
			require.Equal(t, tc.pkThreshold, encodedThresholdPublicKey)
		})
	}
}

func TestPublicKeyGeneration(t *testing.T) {
	testCases := []struct {
		sk     string
		wantPk string
	}{
		{
			sk:     "Bl1GYvRPgMpa/dpxb6gtph374TkDWoOv3OMH+jEoTWI=",
			wantPk: "pWtWZTAnU0lSZKziSOtp8XbueEzfLDlaOuyH9RYteQeWCremf9expxa57A6k33iU",
		},
	}
	for i, tc := range testCases {
		t.Run(fmt.Sprintf("test-case #%d", i+1), func(t *testing.T) {
			skBytes, err := base64.StdEncoding.DecodeString(tc.sk)
			require.NoError(t, err)
			privateKey := PrivKey(skBytes)
			pkBytes := base64.StdEncoding.EncodeToString(privateKey.PubKey().Bytes())
			require.Equal(t, tc.wantPk, pkBytes)
		})
	}
}

// func Test100MemberThresholdManyTimes(t *testing.T) {
//	n := 10000
//	for i:=0; i<n; i++ {
//		Test100MemberAtThreshold(t)
//		fmt.Printf("verified 100member test #%d\n", i)
//	}
// }

func TestRecoverThresholdSignatureFromSharesCaseStudy(t *testing.T) {
	testCases := []struct {
		proTxHashes     []string
		sigShares       []string
		pubKeyShares    []string
		thresholdPubKey string
		msg             string
	}{
		{
			proTxHashes: []string{
				"6DA069138E905FCF845D2E92979086E2BF89BA25D50E1C59799CBF4D2F2A9D01",
				"3F669ABEEFBE8527A5CA342037F8F97F5E6C8A65F559936ABE546601EFDAB603",
				"11DE79269062F95FCF9F5185E33736819AF5D1F83FF06589016E7992F9A76E04",
				"86F3E79F54BF6798BC8F3014453F2C5358FDBDD64A7E78CF2A275DA23D852406",
				"69740FEA9BD9973CECA3A140220C0960D7FFE8DFE040DBEE65D2E70E76C17007",
				"93D402C3A60CE05A40D9A1E68635CCB7255D5FC7985B4F377CA11FC45A49A407",
				"7380D940CB3C42B5EE571DAF4B403A73F284F1788AAFDC65B7DAA6FB4257EC08",
				"7F19CB81F8C6F02A282379E4689D2C06E0CE7B75E41837D04BC79F507A3F370A",
				"0E6FD4894AE4778D3F3A8CD13DC28E5649BD71B1034EA9C5C5BA07646BFCC90B",
				"731DDB4DACE693A27AC91C696685BF3E01440E2F5D57B53E2ED57059F6A33E0D",
				"FDBCD56D6C9A71944640EC195847E879F7F30B998AB3A7DE6EEF8B939F3A4510",
				"C3F559E803F09BB261A5F94A5C020816A4CA04627D1969819C32026D46004816",
				"886622DA5D1F1B025F69E4CD924FC1928EA35D8312B807D8B50D63107FBD9A16",
				"247AE64AEB7BA4D7C85AF86296A588504842FB10F9F8704300B9C87CEF9F3A19",
				"4661BE45C0671AE1ECBE1A4D81F441E46118D94E01BFE5E483472DCBE5186C19",
				"646DCC2A8BEF5B1851E81F124ADF9E2AEB4479928A177F6BCFF2F88610C4FA1E",
				"65D41DAC8FB520FB0C068B57E86855223D7646C19B4C744618E3549FA83F601F",
				"89DF5FCBB700010CBE2AF64B9CA1749BB772E745F81EA5CA1C4F0584590D7F21",
				"56652497D561EBECB45DD48482E3857C73B7A984E1EDC6453ADF0F11DDB7ED21",
				"5925C8A522585BE589B7289B1FEDA67A0A10E2D576E9399D5CB7E63A94B5192C",
				"2F4BF68BCD9F4FE5171F8111A7F007F76D1298C1124B8A85174E64E057A2522D",
				"9F1E242390CDE84D67D9E2CAEB1FC042A6BF0C85C8393026733EF5543FB0BD2E",
				"4A7D3E011DCBE58192A8BEE91D366C6F3720D8247A7DD586B8A50A0159EEC937",
				"11FA2046C7AC93AB995FC6676C22CE4267B4519615BCAA2BCE8632FF26F70C3B",
				"4B32343C6F64E0E04E6A45C367DF1C7BC66A32A46CCDB24EBB36F8B98DB71A3D",
				"A57E101C6ACF9BDD705188CBDA5D057699053DD97B6FF4DF1142C589EF19BE3D",
				"DE0E65899F4121092FD05C22CC3C7241243338EDFA5D259C4E61D2278C58423F",
				"8A41E1BAD9A1796CAFFE3CF351C8A95ABAA247F8DC58BF076C38841594069647",
				"30FB0B68444A03B7A3A7F079F1445CAB153962FDEBAF77D9752CD1C08C816C48",
				"9F4E2D54CC8CEBA72D02A8AEEE83E4251A7AD5BB4FC6FB336B4DF910C181B049",
				"CE8F2F6A377154C0D7B94F76414DEFBCC4EEEE6103B4B69077D16FE575B5844D",
				"5BE5A28138A658A802A1E871D7BB4A5E8A167EFFE9E665B4A2ECAA559D01734E",
				"3918B3A73616AC651493ED5C4C48A844B4B81937AAC00EDB9A8840F5976EBE52",
				"E780A06795B6C316AA84451ACF07E0F11F9565E256A59057717FBCF0008AC254",
				"EAD18F6DABAC93C3FA0DF238E992FABBECFD75B28DFBBCBCD0AC4BD4DC89A255",
				"5A63450C157320AAD29F440D14CBC4FC5770B93CF85B795FA82B991302AEE156",
				"59D45830E45260A043FDD196F966679F1A63F1B6C28F04563738226BD6548658",
				"C57CEFE95F4B06FC5AADAE0E4466067961227729FB9BF030AC23573747348858",
				"7A2A207F7076C371F1E9AD7B5940E8F696DAB0C5955AB389526D0B5DC9D12159",
				"CFFEE71A4A92DD5B9771BFF75450CBF6110E57EA4C3997AC855A335FBC33B359",
				"C975CF5908B5E673B969F6457D400AB678B34582FAB131A239443852EE860E5C",
				"F572E9ECAF61753950E64FBD6581710F8B0D5377D0F0B18D5968D77A21EC605F",
				"86BAC4B628AC5B7E3DF1C8C54FC4812A96123F45E7673F773181CB5061436263",
				"777DFFEE76D4AC2B3C9222E6D3CE285527A16281B1D22D511FDFEDDE4E46EE70",
				"B5AFEF285DA452E7E4BE30282CBB7DB5A0E8B5BBAC4693E1FC12D1BAC04CB772",
				"3412C111CDBA4480542BFA4F5C19FEFF42567620D073DD275E40AD53080CCF7C",
				"3029432A632181B6C15772A07CB640C86E07EE16E7F42F18DD1E5B611680357E",
				"49A4203897570C7684A664C1E205DE2D11757B09F294492AB3A1570C6B562884",
				"3C138AAAD47FB62B6CB63A39CE114102DDA98716F89185284B22A72E6DAFE284",
				"A6F41E6493AB50E93BE4C19FCAD14CB39985B42AC97205FE1AB68BF43B21B987",
				"318BDC18E44D050ACABE27C9A4D690CE08CE0A7E9D68B69749926EADD04DEB88",
				"FD21CF50C8F2F7E475B7092A5F136129B12D30E9EC98B03614EA0788FAE2F888",
				"A77BEA5FC74FC6B3BAA6E83884965090BA801A5F0B0998A6441469C9EA135D89",
				"722C8C8037B7D1B450E9C0F03DB1CCC7BBF827545D03D2A1D5B8109A4D9E7D8D",
				"8B971EF085C168CAE87C3EF20DCDEBB23A9A26EB7D47A4F793AA2353BED4018E",
				"DA21CA075F0B1B6C29DF0391165030D85A8D5E7474C6358D9EDBD3DD270DE78E",
				"B0585BAB89FB4D146B7982E8F61EF15E5FEDD0AA6B241F1F036C9C1EFA10E693",
				"4C13070B2C286DDF96038478E491EFC9DEFC4EFEC77C5FC8B181F2B55D8A7096",
				"30FB840B954E457919DF742D5842C6CCF111D8A00BCF1B1318470A0D0E6FF79B",
				"84C422F501C997FD92A28467A402B50D7B885485A80BAF81CEC22B88903F88A0",
				"116F31006B1EA1316AC0ACF7482046017DA10A9A51ABC5AF2F43B0FD1F83F2A3",
				"77A60992B1141165596F3A5A67884F26CAF9C21351C5866ECDC9625038C444A4",
				"BCC7FCA859383070960131C9D1B316026FD1568BDEE8B34C357A5C564A3761A6",
				"A01ACE41488DE639DDE6CB76594102ED1F3D3D8BEA9D29F854AECDB27065D3A9",
				"2344C8196AB9A4BECDFB3A287A511278581D784B9AFDA234BE289C85463219AD",
				"FAAC8B8D958B3A7990A0C0B78F3C082DA2BF6D3C0035BC13AA0484EE2E7E2EB0",
				"528B059C0430BE26BABD893FCE8850EF5F10BA1B166331AA66DE0F58F1BD5CB9",
				"01748DFB56EDDB3195FA358B7FC9EEC148EB75BEA0D6D2A23EFF2C959E5408BA",
				"D52BADD4D81E2BC28FDDB5585F05D72BE67F998756527B55DCAA4DA20B5E62C7",
				"43E49C1F2735906DC298E133E1D22E8FE4A2A4B23E05E871DEB6E99DD6A924CD",
				"37B955E83162E8193E09FBB6DDC0DA9FDED29D23D43EAAD376E5E9B2C98467CE",
				"03FF74727A3D9768D476C4039B95E54F8C110717DA9CCB53DE9843766DF4E7D3",
				"D07D66D82D840F153411A2991EC094AC278E419FCB9269186B4D1D70886058D4",
				"F64FFB065AA4771B76DC55C716E067A2EC27171D81A411434BF90AF9D052B6DF",
				"748473592FB75932500046C45477222FC6AF296B5BC50A81936283ED6BE94BE2",
				"74F8DFB0E2FD4D2B478F44A15FAF6F00AB40875C350A3366D880E95412A072E2",
				"207D97711F4C60A23F5BA1A79BF4B86ADCEB51BDFC25CE25172C8A311147BCE8",
				"109E45AEDFA3B9EEDA9BF3A12D392B3DB711EB9C248DB5FC5C878703496621E9",
				"D23A37AD5FC04FF18955DA1EA1CEC8975FA03C525104F9553B3CACD36045B6EA",
				"51172935CFC699E312EC12338E14D12FD54A5FB4065922055980D8206DED70EC",
				"B5BF194DF53163356C20601A12FC2284797D19D4338CC81E866149A2AB2A06F0",
				"CC444463870853BE3619FFE546442A4FFD2340EB59C35F1C41308D6A988946F5",
				"01F023A48BA1D046F980800D8C39B239E21D04855876700421F36E716A91F9FA",
				"C51733D19E34AD980B9B05504AE87C790F3F48897D5421A570EBA497069AB2FD",
				"EDA8E421C9FA856CC1B4A70971846A9648B8877BF2EFB9BB80AA93EF61D1B9FD",
				"BB12224423D2F515D5F2D65D8E2AC93C53556150FEF677856CF2A481923057FF",
			},
			sigShares: []string{
				"8abad8611cc2eaf41ab7534b9adf4640000da1deae11e8885f4434280d2c57359d40a12e7a98c169fb536796229d49b71164df27246a64f23fc97d0d397d62438ddfedb8a7ec06ce9f3309c6f3d460617608488ee36a32df915248510416f8a6",
				"ab8c3a890cfb5239fd0b8341865f382bc2b1de33be99d48f30f23b2918e05326cba40cc12430babb1979e9d2480bd0fa167f57badc2310dc80d26cc277f1c2a34ef5164cecffdd4f68b15b754c2f92b2f41bf8fedc22a787409bbf8280428e34",
				"aedca0826b0beb4e17c979c76729de05264c368cc141df8093573f4196bcbfa714c69b04fb0d3b6e007027eb8a53a1a50251ba83da26bed0973d95e4535124f79ac4b22d9724fdaa8cb4a3d613b4cf17877f0a795d3be24149ccb1031806c0a6",
				"903ca77d3eaf42cc75ebff9c013b5be3cfeeeb63fcda43cd5a983b8f632601a482df8aed199f4ad73c994d864f15da2c152b7e3b252d8995f92666e9a42cc0c1ed03f6d623a656fd23c6d2203d8d76f06728296aa1db348b15521d549ec09889",
				"84906603233ff715d3f8afef6c8c2a651d0e775e2997c90ed2f72a425224e53f0dbe78e768bdf4f63aa1783cd4e52604147ef5332bc7272751e8df6730c105958ecb6d533b26c3b7f3e9be659fc973db1d303d169861d345a86a0f787778a623",
				"8fec02d5559d4e68b0cf17300f5a34b2142aca89f9b5fe5be64a1cb641f13e83a4360634d44ea2d55b8baea7eab6e26d1603136f0c5b462b7184ca0673999e904369354588048c71ed7bf4215fc4826082d1e98722f1e9007b902168d750da80",
				"a917ea52c07f49ae22cb5443739ebab8c4958febe47e1af029ac786962379fe2d5aaf86fbbc8b2e65c494ceccf8877250e1f649ab6ed550f41d3da0727b2564e34a2f0fa52da86a134ffedfa88aab5e51c4c9cf9df601017bdc85feddb5a8dd2",
				"afaba1e8da8616eacb6d0b45dd8b332526fb699e69e0187739cb6f202e239cc391ea2244322326103835041b3ba4e44a0cbbc2afa22795ed2076905c454e5fd3a662921e1e941fa61537d92f8fdfe789c9e539b368706457af055cefba688a53",
				"85f4f8ea04b6bede182369ff550f6b4015aaced785f066d5bf898cd995b6439714f7b31142d11a7b78b448e25bed70b50556c98f0c51d9a4be98e042d133791df6edce2892dbd187840f1cef1fe520775c2bf962fc8f91ff9d1379463049e9e4",
				"90893f2bdc8d3df1f7d33464b284d8ac38e3edb7f22c6522350b1e1d6e1021635bfa006c6f4fbbff042695c6cf6ca74d12948d4d10ca8d6f87de50adc77a2e3304c2483fea95594a92707cfae7d35902a5a9526f75a424f98b24bf24eaad272b",
				"90a017da3108e4a25be65a7ceee0d887eff7aabc8b7f68a21126b5d1ea5749196495aafec2bc52b65983e8730cd1e46703b75bb004c71d443fccc36c43925ef4b708064da9c25d649d4a06de97fffd654be81ce290d898b0933874be8d0ee436",
				"b1eefea82774385ca89bd880fd7704d5d90f10c0d8432416ed4335d4b75a0e10262fe5689a9fb8e53bd5631947e4660f13183e8bd9d5297a10a92c875a0a2d8292b7cfbfcc6594053a98a4f81f6eba67f4a732906a6954c2d52fc7f201059aa9",
				"90555cb87f78b755df32b18f3b5488ad7c006248301a30c419fb031a87e3b29747b34f85325971e254fbb6cfc06d162104435c6cfe9da4b66fe48dd0039b2689632583c89889e0f4a13ac42f3140190a6be116746b0f4a7ab9a51411a5e8f7ee",
				"b5954c1987acc9b7ba72450f03c26dedc246bbd58dec6bf1966fe0fe7027f4435bb0da54d5fb8f7ed46b664bd71557d41366269c81c24f77fbcbd5fe245fbba4fb9e25a628fee66d6d31892c58cc5ffb62494ed884047f826449e38665eb9f70",
				"91dcafde4cf9f7e73020f91b049fc3dc46da5c1381a9b4d7d445970b38ef98799bba04bc6edb9a995f476dee3dea5b8d04ee23eeb8a03f48788cd36ea82c78cb5e5326a805c0d7e34c50db806304a1f3030b21949e16f4a011b47ac6474b5aa2",
				"8440dc8200c6f8aebd27618868e683643f2241d34aa835a06c26535ca73fa8c1aee1d58d2fabcb547439a1e0c5db346310d1f5860b70184c59b48904ac27de2fa1b7468a3fa58d21db0adc8d8c71efba5883f3b67d6f940d64e4ab0c87ccb1fa",
				"913fb4b0da679d17cba4a36a1f7b8a551f26e858acf71ef3ff5076ad9f7e689e87749ff9e11f941e53aec3d5f98efe8b06a430d6eb5979d532e1bd484017e1b0c604cf7e6d1d9d7d2aa30feaaa70f5653ae5bdbc4761fd25205844c7e4e14b05",
				"ad67041739d1025625c4874ca60518d7a1009ba6fdf049d1471dcbbd2712d7e91d6d42c464ae4bedfbef2436a00c053718efa121c74c5b09d2b2dae6bcbe36ec4fbfce21237ea986c80d731f8055f329d152c9333b97dd70f6d23b385f79d013",
				"a0028498b731a0f7e941b822ce73fe3b11c7935c2979ac82400aff3be818aae3d56f0589bb889b25dacd9a7ba53dbb2106f48eedf9d61ff1c1394ef8b8cab0efb28a4d52acfcb0ec7a1e9e962295fd56b9eaca73ce786dd987c5acd0fa526467",
				"93953e6fb390e743eb7c443c1e97eacce999cc95705c2d0c1ad4d3264c5b14b380aa02610d5a5e9085f70dfb221ea3960c57ce67680474f875cfeb0caa5d9f737576633af257d61f3db21cbadea11a38d286966be02ee33cfc7883917375431e",
				"ad0ab8c222bb2d95be9ebfe7bce8b0b4e7a4ed2e40e393c1502075b7b7d577c320acedb83e3dfd9f5344fefd28e91f770ea04e3e21eff3f7148add3aaa43f8e320d36f592ed16b370483f5ef451cb4ad09847545750bd60c50ea37b65c41c043",
				"accdfe72add315266fb15f2135c08f933ae7d6e2aa7c3d57473bda4930c4bdcd41dbfaa50a1d57dacde64ece8491e01603b69dc7f0d863c66024da80e61fc0fe87d6273a712787f1140574d12aa71e16e39d357f1877e29af383c60b0a22e420",
				"8bdeebd283898c97eb3da09d9673ba9290b3b827a25fbdf271e0b20d558204eb037c356e1cb42ba35fda900ca5a8815c159c4460a022f37abe5491a702369c8a00df8aa9402c70abbb586878f477b1dcff4c02c3379a92c373a3daeef516de0d",
				"8090b700a4c8ebe390f5070023a9f3f86fdf145a22976ffd907f5cf3e8202503f534ae892cf3e2b03af1fe8395bbb0960582ad92449da1a3f6895d582919b357d542ddfb16926c1443d419a126c23ae9c9932d7c3fdccf6d5816baa56bd41849",
				"96d9a862ed6bba1afe49e60f9e89fbedde2c3ab98f502d0027d6f34e5e0dfef6584c46ada93e3419255b4a921d848e600b46f20a51b32c353a1ed8b9e71fc8f92787cb9cf92fc6de3688b8ffa9d0c689ced7f71fb326b3cd3cbd1abd85c1f548",
				"850fb6b69f3d84e354634058bc338452108360a33008f6347032e5d9e121c49babfe46d8653f0fdfda248edd72894809016d09e2db79f209128705daa2d362827ea9873ce6ce1ed0b286f18bc147c92148fab56365fd9e2242ae2945ed2ca142",
				"823d1d09de341bb59fcb70b022b04bb8203cc7e0c49b79c5c9454006c6dba6e2fdbf9920873bea7a590ad69a9021cbd4188e8dee0d7d7607a9dccaf53cf8a8f2c7d7a5fa63cafd98d992e7f0558e347333703d3e69f018db7c5f6062ec7b5801",
				"9666bf0cbb3d5e2cc612f76a98afb1030b4dbade5ba53315f1c3c47d77d4294550424f8ac97915972f516c6ee004eb97145c7d6fdbb313d3d9233d299144f0a42b0d1609b6e6bc4e08e0b40e2af86444d639ad98e6d95bd6ceb0879fc5e97a73",
				"912f6e310eae08da710d1ad472eb907776a2efabf37decf253cafe6b72bdb3d5785e23ae748e5bde3cfb34f84dbe846909bdc3fe4e1e8771d04ad3661d8b3357c51f541a85124e99a64796fac66c322f16826298aa1d21bd275849539e0431fe",
				"826834f2f97de3c62323b456b2ffcacae36cfe580b46c4bef67e46aa1c9e6131616b4698508878e0e865593045fd1de5170845948d684a04274c1442eb42ecb617a559758090b75fd6e60c446a69f061e35481277e65a38c748fb29c8bf7fe02",
				"8942aa3c63f42ae933f921b7fe641422b0dfc178c2b6a013752357861a69f944061db0d4bc8e904f71003dd542d0776e19d4a0d26669123116034d5902c611879d01c6e513ec5f7eaba4d70cdcd6ba27656f0899cd277e010efc44e0638db241",
				"99ddbd0981fba7e3ca44c74ac5ba6a586f949a483152478e66b4d0d77cf0e8ea04b64a8fc2ee2ea4efd7b86b63a75a1518d4a803edbf728d72f222acc8449bcc4bc38cf8d380c454578053f2f63c926de22efbd5e4dd12b759e1ec6cf08e2c93",
				"a8c5bcb2867da00d836eac8682ab87b425e1623920111ad1cc1dab90a40287e6c97cdc5cc9ed584d90710a69053a1da40c4b40c9e2d77d61466df11ca7b8998dbb1398acb77d3d0fb713eca0d694d8989d98637a3ce71674073ec24aad67fe37",
				"a872126c715618ae04a71522fc6c6338ffa39d0114ebd9e30faa322ce0103d6f5964f30cfa8aacb7bc1d11bb44662ccb09aa11ea483d7df9d9d99bee50b1dafb2fc309a0e488cabd1e251af98ebbdd66c0efa8d36957845eb89a26dc71da002a",
				"afd9ea410021270783ad2406f3deeec6a30ed927f86e3080f2ba84f447614d18c4c27ce3447cac4f681a98711bde3f370221ab1242ef285468112e8b8a206785df5e46f0529fc8bfbfe661d7a94f23fbdcc2f3bce5d93edbfbd947779a67f6a1",
				"b273fa53687180a535014848ba84a0d678a9626beaa48bf7f8488fbb5c058b9abf5c9c0d5da53baff5d8b47275039b71120a2d7255aab24bc885868aa0a04e0fcfdc08c32c0d4c0b0a5a3cba843b7d095ddf8432520aa2f6c073f26b4a99775f",
				"8e2145b8ced8e4be118d59e38ea13ea055882b15c5116791c74469b1c672a970d44934757bd2b98cd4c7edd55220720c0209ad01b2a0cdf0370d34b90fcbc530d8b70c75dc685fec88aff43f34257a3e7b165064e487b1fa8704ca3c77c4271a",
				"988ac250341c1f6c9d43e98c8145bd16cc96a3059d9731ac5239120f019761f9e2db39a5b29ce994a6aafff39be450e41442755d95a9ef3fc6a6eb891d488cf5aa0880c10b951153408b321b883f684d5f20dfe09bd23aaab90c03dba088bcde",
				"95574b1f70a172a17283958707dc73abae30ad755f89fd8ff250ae65ffb1235ffb5aea0a4730af2e8d7d56dee9ca5cc806e6d5dbc348c81c521c1c72d66f352bbe7924da0ecbd2fe79f4379efc2829eaf621ad31f8f95e43051e8fadfc01b9e0",
				"8b49f1f8c02e4fb9aba92bd6d498fb21559b8457344ed12ce448f2fafbf3e4ec192d04ee36df0ceab97cc1cb67d883f00b073a064c049ac1b6003e32df190f386b17e16d972af4c5ce6ddbdc3e6d870cb819866f0a684e811aa0a22b6271ae63",
				"a0282c75fbfc0ee5b9de5a444bcfba356beb4215cc56c1de03259ae27a9e68ed4edc72c43ab346629e957e4fb07391dd16cbe1025e15d8de8f07d5db538d6705b9b0561c70d20409585dba6159c33a69f285b1186a86ea8f6deccd5debe92222",
				"b062caa2bc53a2fe884117adb6a0662b75f4575a5704e01e5baed28d0e5c4e1dee2eced622f2eee3cf0bc3cc4aa6b7821568515c80a74fc77e2bca3ce62c370b76d52e49824c2e75bfe3078b14ac0beb07d31b4256b83c2b3ce0d65ff437443d",
				"8fc9a32f78969c0cadcd21cdd2c45297e884bf20a600a83127342567f29b53eb465bf9124a8b7e84c7cc1a2a089ad2ff0b87a03267139270f39c27855c6c81af24c6912bb800e1dc6a4be0b604514ea5a2b33509ac8d1c0caddb2e5a9864f4df",
				"ad85bceda4cb965abd293930180617c5de1628f1d4d50fccaa6dc65b0a5da15dee343675fd74db20272dc0a6f31356ab139aedd2fb01654531e3fefd2104276b34303fada473c1e6e3227112a60e7cd7b86ed9512787c7764ac6e97ed6a1e608",
				"b9d37e7dfd409320d0b9cf125108b90c74ecd5895237c9a9b163eb6bc1e06cdb4b894e8ac7d9f8917fdfcb1553d761430f102ff120f20a25008e7afe0c8bc382eaf31bae29185c16ae2db84166a5ba54bfdf934970c3ddde6353c4541d218754",
				"b368e4a114032ae1b09dd4a15197b51a1632b49a3ea49b57b5d3cf7ce09400f1fa3cd5bfdf1a43b8e8ba5a4bec02934c126d8e9b9231b43097902151a5670f573d858d4ef49430e487c4f357a11a6a9efc5bf65b1f84f04f22f0711f2228e103",
				"85499e675738251bd2bf6bac8f8131c3950420996f9fd8ca4367b4ffb2798e574ebadd3d4363699b56e8cf407fd345ef132bc6ccacf7500d300f03222b78defd7c9923ac5c02a9f1357d3cbc0db866af23f57534b8d30bb7dae812764889e4c5",
				"8995c3275ef385f1ec829a21cd46badaab9a5bd2fc7453cc611b5a798e21317aa75fc1406d01cb44f397953e9338c63f10b0cbcd14cf9bd78c799df3bb3cbc8b911362f19b969b8e76cc5b0808e9d304d9be16f649416c4de595d77167692bfb",
				"abdaa42ec146c448e7f8fa6729e0ae9ed79a3d948ff380310a7634c08121b63720ccd51271129025f92571e1a2b392fe09d412ea3ee355e2910b99acce860e92fb9708bc525540978acf7daffbfabd379121dc2b46cbbcd2d86ab65673dff080",
				"9311d9ed6a442c526c96ed30459cd095f8dce46fa9a4c021ae01cf9b8ea57628b40256d477e876e2d88862f41c8199b90dc207c6a1c01162533eadb6b16326e31e85fb37fd1fc0afb88a12c8bd98d5f07a427b017f301b7bc59af98977ad958f",
				"8e725a03460c4b384ee980fcfc344a2c8c9f95e2c5d7172a21608ff105d276f3a09fc3a0a1dff4f17d20aa8f11436a9d05bb87ab7936ae96dc0d5fb3bc6b57fa9c16c4bb688942626960a30c0f88235c3832137058b6b0fd3ed75ec62417971c",
				"b4b7446ae741bfd06774a9767b5b7d4a56d4773e454ab08323a6042036c54aef0635f29bdf78760e271e964d9cbeb739000bf763a198a1cb738d21742b9acedada7b1115375b0e173e8493c5e115e30e7302b869ad6cd68d006dc53f727550e5",
				"90c424b174bc78e225179c563ac1916c31173e6185a39c3b1e5018a155642cc1aecd00814b933621fa4271b6a13dae57172e2976593588a99e5e77928116bd7a7707ebd70d1b26ae149e287a05dd1df292429923c36db853a8021c79ff592e6c",
				"974ae055562d00e9e82f64966f868c03b728baaaeae13f20fb6434d7782f09b003912527147b6f3f3d9a2fe8102abf4f1613927f12177dff5d816456423d8072295e10632664dfb0b2080d63021d2c8d996ccd7242afbd34c814b371b508bd22",
				"979a3818db8ed0277ecfcdc68d45928ef822e1b2f32f182727b63bade9aa68db8ded8bf09ce67ea92a5b668febcde00812ff10c207a1bca832c4695ae02d91e0c067b154fd2ffc32a21da8224c5ed57745294bcde97595aa43f7c08c29a99f4b",
				"b3d77e3939a667b24ca58a6987ae26d639ffc2df9b518a132fde775fca5c84b50d168d96504a46c278f5a5db521445cb18e541e5e3e150efea2b92a24ad3eea9cfc1735531551454453cc0240faede3f58a668162ffc8215912f2eda7a15abcd",
				"8ece412e292f0cf8949b23ef3aef89fe381cbf544cf8ee4751d41d839fc2bb7504e4a7571737172a7bf4e954e67f14e11314cf0a4fa94e815e4d68ee939d86170f698561e2b4b172d1c34bf6bae02906f0c28adcc528b3e1c70f191ec4d8df8c",
				"90c410e6956a07a5c0c3f8799e6d47f59fc41268668988cd73d3f5314aa16db404187a1ca2d486a8602410b8576a585100ed1fa93a4c6f41a4628ab710adbe8560ac7d7c1b47f00a5991ee1df3e9b358418c446430abce764e1aa19166720dd8",
				"b2bac63a3849511dd9dfcfc5ab2f619b6b554c2e87e13a228d290f48a1711e37ca7238e7fb591c043d547b64329feb7d0c8a0a830fd423625ee397ab97d0020049a65dd6f65b5c57439dd82f8d17d168dbf956bc4b60263cd90463492bb704b5",
				"b30dd577e08615ecf11539c7a5b779a0f4401183ae6155dfd184daf6a957405bc1ced0e9557d09eaf91339e62fcd4f7c1813249e60cb6bec90a89aa397a3feb3207e5df07ac298d9ce4dc7a842d82f0495376074bff98b434b0c5ec1b8387724",
				"b3179732d1ecf0b45c2ef894321999c180ca71f03f0eea4ed8aeef3751f454c9957832fab5974ae2213a0a4dae795ae3046c3f915a0607fd058e8ef4f62aaceb18990c0d798fce0549163152da7b6dd36e1b325a0959d25b32a6d340dcc68d39",
				"a7b979e84c85866a2b2749e68d3af6866b0760619d9ac3a0d59550437e38567a0cd5c087bdafe187bb9e622290efea3911232a9725a1be8c4a52d74fbccdff7a45db952960b408443df36d965705da780f5ddcdf1160780fe5374849e32085bb",
				"a7677d90e8e75f8af9b82ade21839335854caf88076187c17c20b5b7630f0111b586250efd54ee0607b9726377ceafc804d83fedf3e53b42553d1c7a9f541d71c875b1d33fdf074b98a99bbe64a6e9f33b1e9fce87b1cc90c5473cd4cacfc2db",
				"a9cc1da215250883d03302d4a0f7172a66941f86559a91898e65502466d4d4f02a23d6dfc579fa3ebe7d856149ee3c620929f1665c167cb404a3fce554822a896df1d201de98b3d45d49fcc6b6667c51fb31cbf1886bcb840497ff1f990a8b59",
				"a8c4c80c99ce2c0a05172f2e546c533fe4b26c18e7c2e3986c356a2c5e97355ebd2d00e0362cacb95233bc384853e9580349c5631285f9146ae4453989cb6ed6855b5671d2ca8f3121836ce55b7d24b90c86f9a110a87f547ebee3359375e34f",
				"b62a3da9cff2a1d4da68598895e3ff29c8fbf79fb259d9e44785fbb688cee1f5aefbe22905e1672cb5a6836907f58b0f08bb05d40a7c74b55a3940805a0e4fb158513b4fd8f426d674a11392fe4eb3868deb0f5faf471f22799a8c9233a42134",
				"8063b5590e7998974817abb829f40de9292a8e891bec77a13ea396b73ba3ebe2692651b40cbddf69cd95a2d3f0d993ec11778f2aa9fda63114a0c550775ea47b770674a5dc3667321639d94832eaa89d2dd4eb4f58a7f11177c1a64c8e457519",
				"98e0706b787d9c87a3f074f324ec976fff59d02530d169a082b89590389f607bb19de1b80ffef0843cd87dbae0328e131568162582bf21585e548713f983c05565a497eda6f2985948619731efffaf3c1ac9592002b49a585846dc192300087b",
				"aebd4a1a05ccb8a6a0194d42327fb12d6a3ea1130d82a196fdea33fd08b1d4ba89742b9775ad27349f708c78820c45360daa8cf69c1a5dd11c0b37f2d42492c14cc83a7f0ed8a2d7d00fb709049c45a48ffe150e388c3d9d22462d3405792738",
				"a0de9ddf9e68271824201e6f0b2db976cde5fb3fc5193198b87d6abd1297528f7b2ecb45e9584f2ec10a91edcec02b9e08a62abe29ff2cb3b3a80d06aa1fbe109e4033935b6c14069e86ce82ab6e7100e0ca4376d8fee6c1fb25426611c1cc30",
				"8173c0f8f7169c420862839eafa8b1e114468325c2e9ee60c12576176acac28eaf8a347727f461d8258b870568b6bd0309f984caba2b1be2a6054ba001f6f67ce4ffa87863597552b6b845133c9f28327c7e7b0a5727c72553d4fce4f707ea95",
				"97f0eba7371dbb137519dbfe3ce2e09fbecf38e69e8e4a274c39a2a68e4e7beea0b33450abbcdc895254109ddfa0fffa051cfd0d6f3de67cfb2627f458b7f8a12964071be0da938fdb293c19c218754ba89ca652af5640c769580756b1ca63fc",
				"804528ea041eca9e12ab4222b807b3c06a71d50cc0bb46f3c93891edcada562bc00646b04ff0c0af16fe6924db386d520f28340a6439a70f5ad66c0ccc305f4c15ee29885dda622da641652932c5b7df71676f0a3b8b59b1f038e3f9da32af73",
				"a71084de69872e2682c86646d72087c006ea61b4bc725d8d7e016bfadedb9f4cadbaa8b414b770a763870a5554467135056fec5ae8caf89a5f8fc498c4acbd726e411d47c5ad3e483dec0d519ef22485d394aeb55ecf72bc5097815adc03553f",
				"80d07a123b3a2116a84970995a49d6a02f82ec9ca6e21d094469d083aaeeb143d701c5f31cd376f5299d8d1d4a2690ce0b4ce71d5d9bdf3fbd2946ea83d146266c9a5cc1143d0263d4eae7f62a92f178e847274b96c047aa9bb888118174fda6",
				"a91760c238efb712614a897a34c68563dfc35b4f940d0694a651065353f87db4981320c8657e846e969a05317ab5d18b0e7810e116e06b8e0ea6443756f91bc7cbd09ea02bbddd2469fa4ed997e71687522e1b14d455a901680903625e8ff23e",
				"a493a6aa001a31d1f9344535ccf73e5a63ddeb9140500b3cd1aefedac4d49068af223d05c15355605e9d3cb82b791dad0260487fb9a4d856687782dc474e8ae7c770b2a04eb641da0990e7cfca4101548f56cebac1900cf844799a1ed4aeb192",
				"8770b47f489cd813923ffaa03a424572b796f50bba856c22d43d13138c65097c094511baabcf2a75a84ec39d2416abda0558b7ba9bb3a2b3794e0087537328c21a02ec8a029f5f0756ad10ef794be0f5150f2890a856be8611d6d8da9cb2e0d0",
				"a50b9db12430b8ab20de2ec624b1d2eab11f5161ae99e640206345d26222027656be20e181e0a170aecbea0f7b11540c05d6c894b29591d62262ed2abdf1689fcf900eb77b05f1c65cf3493d0c71328d825875fd593bbb200cd0b4455dfbf5fc",
				"980721087d1db826d32978a50fe2c89effc9e3a214424e347fe041987ee9f1ac1132232e80f170128ec693618b093a31144305423860018f347ede5d558380348790f3b2116266bf6fa202e89857cdd6b867d32a0b9b64c3bc979a99cf4f3617",
				"8ff457b088c3bd7285cef4906d1534ce89f7f6f17a8ed187629702bdfb6444babe0f75ba6e10088fdfa52423815a335504dc05b80a7fdeb20c6af9bb3120616e76566c3ef0641adc6e404c1744802c55a29c3606f2604326cb3b2ab2b1270920",
				"a7d167d4cb04fa9c6c611f8b555a3b4e1d239b55b82afe591c2f066c66d76658cfacff5c81df4dbc9ec3b9c899e9ebe50ecae327d8f490aa9f89d171225e694aa571d27e3283ff003b1ff962d9ad1f88bcc8c2b39fe8a2d5e169eea67e6fbbf3",
				"a8edbfd3969da3c3b46206453ea264ec41f818ae73d39dbf8343d95a3e933c2a502b0b2baa8537f1a757c1031f91ed040f6c10b6cbb863d60be7d53c574dfb09fe41aae543f209b9717c627392747dd78b26552b9f00ff4e474ec4d055f58438",
				"a2c8b60fe4778342e61e82987497b6ee20de0c9e1f6eda57fbe6067e2296578d458a8464e04d2e8753a9ed20361190df055fb682674537bd72e6656265ea7b0c0c7967f09a236d40e4d7ffc7f3c5010453faf9e8f6b460ff8369861a439b30f6",
				"a1b951701cb7d17aa477fdfd167cd8b30d5cbe49d5f343025ea166df9cad50a84074e7173519c04b0f32d1cfbc6f4ea3046c1f29085bf126c6a0985b0f037595f38852f8c5cf92e7818e5cba18e6496e790c2db569563e8f10e0a10004def82a",
				"a06e59713cc44063fa48a3fb20d707a99094ac13c591c1554d4f319dee4065d615950f3bd2babd72424221aa79e65b51108f708f8176342db6758f0f33fdbe48bdcef20940d2d570fafa47f5ca4e0affea62c62a116e05b936567251dd80bb24",
			},
			thresholdPubKey: "a05e8268f8e6b163327b9d3ca3c69aedbf6954a91d8057cf1204aca2cf1e58ac3f0783b8581688e0468f9314b4f2746e",
			msg:             "C4E3500CAEC0AEB79CFA05F10EBE77717BEEF5D51159E2A89D8FE98B696BE4A9",
		},
	}
	for i, tc := range testCases {
		t.Run(fmt.Sprintf("test-case #%d", i), func(t *testing.T) {
			t.Parallel()
			var err error
			proTxHashes := mustHexesToBytes(tc.proTxHashes...)
			sigShares := mustHexesToBytes(tc.sigShares...)
			msg := mustHexToBytes(tc.msg)
			thresholdSignature, err := RecoverThresholdSignatureFromShares(sigShares, proTxHashes)
			require.NoError(t, err, "should be able to recover threshold signature")
			thresholdPublicKeyBytes := mustHexToBytes(tc.thresholdPubKey)
			require.NoError(t, err, "should be able to decode thresholdPublicKeyBytes")
			thresholdPublicKey := PubKey(thresholdPublicKeyBytes)
			result := thresholdPublicKey.VerifySignatureDigest(msg, thresholdSignature)
			require.True(t, result, "signature should be verified")
		})
	}
}

func TestReverse(t *testing.T) {
	testCases := []struct {
		data []byte
		want []byte
	}{
		{
			data: []byte{1, 2, 3, 4, 5, 6, 7, 8, 9},
			want: []byte{9, 8, 7, 6, 5, 4, 3, 2, 1},
		},
		{
			data: []byte{1, 2},
			want: []byte{2, 1},
		},
		{
			data: []byte{1, 2, 3},
			want: []byte{3, 2, 1},
		},
		{
			data: []byte{1},
			want: []byte{1},
		},
		{
			data: []byte{},
			want: []byte{},
		},
		{
			data: []byte{1, 2, 3, 4},
			want: []byte{4, 3, 2, 1},
		},
	}
	for _, tc := range testCases {
		require.Equal(t, tc.want, tmbytes.Reverse(tc.data))
	}
}

func mustHexToBytes(s string) []byte {
	b, err := hex.DecodeString(s)
	if err != nil {
		panic(err)
	}
	return b
}

func mustHexesToBytes(hexes ...string) [][]byte {
	ret := make([][]byte, len(hexes))
	for i, s := range hexes {
		ret[i] = mustHexToBytes(s)
	}
	return ret
}
